@inherits LayoutComponentBase
@using System.Globalization

<PageTitle>Virtual Calculator</PageTitle>
<link rel="stylesheet" type="text/css" href="/VirtualCalculator.razor.css" />
<body>
    <div>
        <main>

            <div class="calculator">
                <div class="display">
                    <input type="text" placeholder="0" id="input" @bind="Display" />

                    @*  @if (num_1 != 0)
                    {
                    @num_1
                    }

                    @operation

                    @if (num_2 != 0)
                    {
                    @num_2

                    }

                    @result*@
                </div>
                <div class="buttons">

                    <input type="button" value="AC" id="clear" @onclick="Clear" />

                    <input type="button" value="DEL" id="erase" />
                    <input type="button" value="%" class="input-button btnB" @onclick="() => OperationChar('%')" />
                    <input type="button" value="/" class="input-button btnB" @onclick="() => OperationChar('/')" />

                    <input type="button" value="9" class="input-button" @onclick="() => Add(9)" />
                    <input type="button" value="8" class="input-button" @onclick="() => Add(8)" />
                    <input type="button" value="7" class="input-button" @onclick="() => Add(7)" />
                    <input type="button" value="X" class="input-button btnB" @onclick="() => OperationChar('X')" />

                    <input type="button" value="6" class="input-button" @onclick="() => Add(6)" />
                    <input type="button" value="5" class="input-button" @onclick="() => Add(5)" />
                    <input type="button" value="4" class="input-button" @onclick="() => Add(4)" />
                    <input type="button" value="-" class="input-button btnB" @onclick="() => OperationChar('-')" />

                    <input type="button" value="3" class="input-button" @onclick="() => Add(3)" />
                    <input type="button" value="2" class="input-button" @onclick="() => Add(2)" />
                    <input type="button" value="1" class="input-button" @onclick="() => Add(1)" />
                    <input type="button" value="+" class="input-button btnB" @onclick="() => OperationChar('+')" />

                    <input type="button" value="0" class="input-button" @onclick="() => Add(0)" />
                    <input type="button" value="." class="input-button" />
                    <input type="button" value="=" id="equal" @onclick="Result" />

                </div>
            </div>

            <div class="tapeRoll">
                <div class="tape">
                    <textarea class="calcText" AutoSize="true" @bind="@tapeDisplay">

                    </textarea>
                </div>
                <div class="actionBtns">
                    <input type="button" value="edit" class="action-button" />
                    <input type="button" value="download" class="action-button" />
                    <input type="button" value="delete" class="action-button" />
                    <input type="button" value="print" class="action-button" />
                </div>

            </div>

        </main>
    </div>
</body>

@code {
    double num_1 = 0, num_2 = 0;

    char operation;
    string? result;

    public string? Display { get; set; }
    public string? tapeDisplay { get; set; }

    protected override void OnInitialized()
    {
        operation = ' ';
        tapeDisplay = string.Empty;
    }

    public void Add(char input)
    {
        if (operation == ' ')
        {
            num_1 = num_1 * 10 + input;
            Display += input.ToString();
        }
        else
        {
            num_2 = num_2 * 10 + input;
            Display += input.ToString();
        }
    }

    private void OperationChar(char op)
    {
        if (operation == ' ')
        {
            operation = op;
            Display += operation;
        }
        else
            Result();
    }

    private void Result()
    {
        switch (operation)
        {
            case '+':
                result = (num_1 + num_2).ToString();
                break;
            case '-':
                result = (num_1 - num_2).ToString();
                break;
            case 'X':
                result = (num_1 * num_2).ToString();
                break;
            case '/':
                if (num_2 > 0)
                    result = (num_1 / num_2).ToString();
                break;
            case '%':
                result = (num_1 % num_2).ToString();
                break;
        }

        tapeDisplay += Display + " = " + result + "\n";

        Display = result;
        Clear(true);
    }

    void Clear()
    {
        Clear(false);
    }
    void Clear(bool flag)
    {
        if (!flag)
        {

            result = string.Empty;
            Display = string.Empty;

        }
        operation = ' ';
        num_1 = 0;
        num_2 = 0;
    }

}
<article class="content px-4">
    @Body
</article>


